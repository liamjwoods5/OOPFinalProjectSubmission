@page "/equipment"
@inherits EquipmentPageComponent
@inject EquipmentServicesDB EquipmentService

<h1 class="text-center">Equipment Management</h1>
<p class="">Click on attribute to sort by</p>
@if (equipmentList != null)
{
    <table class="table">
        <thead>
            <tr>
                <th class="cursor-pointer" @onclick="() => SortTable(nameof(Equipment.EquipmentID))">ID</th>
                <th class="cursor-pointer" @onclick="() => SortTable(nameof(Equipment.EquipmentName))">Name</th>
                <th class="cursor-pointer" @onclick="() => SortTable(nameof(Equipment.EquipmentDescription))">Description</th>
                <th class="cursor-pointer" @onclick="() => SortTable(nameof(Equipment.EquipmentCategoryID))">Category ID</th>
                <th class="cursor-pointer" @onclick="() => SortTable(nameof(Equipment.EquipmentStatus))">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var equipment in equipmentList)
            {
                <tr>
                    <td>@equipment.EquipmentID</td>
                    <td>@equipment.EquipmentName</td>
                    <td>@equipment.EquipmentDescription</td>
                    <td>@equipment.EquipmentCategoryID</td>
                    <td>@equipment.EquipmentStatus</td>
                </tr>
            }
        </tbody>
    </table>

}

<div class="row text-center py-4">
    <div class="col">
        <button type="button" class="btn btn-primary" @onclick="NavigateToAddEquipment">Add Equipment</button>
    </div>
    <div class="col">
        <button type="button" class="btn btn-primary" @onclick="NavigateToUpdateEquipment">Update Equipment</button>
    </div>
    <div class="col">
        <button type="button" class="btn btn-primary" @onclick="NavigateToDeleteEquipment">Delete Equipment</button>
    </div>
    <div class="col">
        <button type="button" class="btn btn-primary" @onclick="NavigateToAddEquipmentCategory">Add Equipment Category</button>
    </div>
</div>

@code {
    List<Equipment> equipmentList;

    protected override async Task OnInitializedAsync()
    {
        equipmentList = await Task.Run(() => EquipmentService.GetAllEquipment());
    }

    string currentSortColumn = null;
    bool sortAscending = true;

    void SortTable(string column)
    {
        if (currentSortColumn == column)
        {
            sortAscending = !sortAscending;
        }
        else
        {
            currentSortColumn = column;
            sortAscending = true;
        }

        equipmentList = sortAscending
            ? equipmentList.OrderBy(e => e.GetType().GetProperty(column).GetValue(e)).ToList()
            : equipmentList.OrderByDescending(e => e.GetType().GetProperty(column).GetValue(e)).ToList();
    }
}
